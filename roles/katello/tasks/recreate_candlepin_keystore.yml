- name: Check if keystore exists and is empty
  stat:
    path: /etc/candlepin/certs/keystore
  register: keystore_stat

- name: Extract keystore password from server.xml
  slurp:
    src: /etc/tomcat/server.xml
  register: server_xml_content


- name: Debug server.xml content
  debug:
    msg: "{{ server_xml_content.content | b64decode }}"


- name: Parse keystore password
  set_fact:
    keystore_password: >-
      {{ (server_xml_content.content | b64decode | regex_search('\s*keystorePass=\\"([^\\"]+)\\"', '\\1')) | first }}


- name: Backup existing keystore if it exists
  copy:
    src: /etc/candlepin/certs/keystore
    dest: /etc/candlepin/certs/keystore.backup
  when: keystore_stat.stat.exists and keystore_stat.stat.size == 0
  ignore_errors: yes

- name: Remove empty keystore
  file:
    path: /etc/candlepin/certs/keystore
    state: absent
  when: keystore_stat.stat.exists and keystore_stat.stat.size == 0

- name: Recreate the keystore using OpenSSL
  command: >
    openssl pkcs12 -export
    -in /etc/pki/katello/certs/katello-apache.crt
    -inkey /etc/pki/katello/private/katello-apache.key
    -out /etc/candlepin/certs/keystore
    -passout pass:{{ keystore_password }}
  when: keystore_stat.stat.exists and keystore_stat.stat.size == 0

- name: Set correct ownership and permissions for the keystore
  file:
    path: /etc/candlepin/certs/keystore
    owner: root
    group: tomcat
    mode: '0640'
  when: keystore_stat.stat.exists and keystore_stat.stat.size == 0

- name: Restart Tomcat service
  service:
    name: tomcat
    state: restarted
  when: keystore_stat.stat.exists and keystore_stat.stat.size == 0

- name: Verify Candlepin service is accessible
  uri:
    url: https://localhost:23443/candlepin/status
    method: GET
    validate_certs: no
  register: candlepin_status

- name: Debug Candlepin service status
  debug:
    var: candlepin_status
